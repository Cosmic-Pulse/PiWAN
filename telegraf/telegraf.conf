[global_tags]

[agent]
  interval = "2s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "5s"
  flush_jitter = "0s"
  precision = ""
  debug = false
  quiet = false
  logfile = ""

[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  token = "${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}"
  organization = "${DOCKER_INFLUXDB_INIT_ORG}"
  bucket = "${DOCKER_INFLUXDB_INIT_BUCKET}"

[[inputs.mqtt_consumer]]
  servers = ["mqtt://${TTN_REGION}:1883"]
  topics = ["v3/${TTN_APP_ID}@ttn/devices/+/up"]
  username = "${TTN_APP_ID}@ttn"
  password = "${TTN_API_KEY}"
  data_format = "json_v2"

[[inputs.mqtt_consumer.json_v2]]
  [[inputs.mqtt_consumer.json_v2.tag]]
    path   = "end_device_ids.device_id"
    rename = "device_id"

  [[inputs.mqtt_consumer.json_v2.tag]]
    path   = "end_device_ids.application_ids.application_id"
    rename = "application_id"

  [[inputs.mqtt_consumer.json_v2.tag]]
    path   = "end_device_ids.dev_eui"
    rename = "dev_eui"

  [[inputs.mqtt_consumer.json_v2.field]]
    path   = "uplink_message.f_cnt"
    rename = "frame_count"
    type   = "int"

  [[inputs.mqtt_consumer.json_v2.field]]
    path = "uplink_message.confirmed"
    type = "bool"

  [[inputs.mqtt_consumer.json_v2.field]]
    path = "uplink_message.received_at"
    type = "string"

  [[inputs.mqtt_consumer.json_v2.field]]
    path   = "uplink_message.frm_payload"
    rename = "payload"
    type   = "string"

  [[inputs.mqtt_consumer.json_v2.field]]
    path   = "uplink_message.consumed_airtime"
    rename = "airtime"
    type   = "string"

  [[inputs.mqtt_consumer.json_v2.field]]
    path = "uplink_message.decoded_payload.bytes_string"
    rename = "decoded_bytes"
    type = "string"

[[inputs.mqtt_consumer.json_v2.object]]
  path = "uplink_message.rx_metadata"
  name_override = "rx_metadata"
  optional = true  # ‚Üê Add this

[[inputs.mqtt_consumer.json_v2.field]]
  path   = "uplink_message.rx_metadata.0.rssi"
  rename = "rssi"
  type   = "float"

[[inputs.mqtt_consumer.json_v2.field]]
  path   = "uplink_message.rx_metadata.0.snr"
  rename = "snr"
  type   = "float"


[[inputs.system]]
[[inputs.cpu]]
  percpu = true
  totalcpu = true
[[inputs.mem]]
[[inputs.disk]]
[[inputs.net]]

[[inputs.docker]]
  interval = "10s"
  endpoint = "unix:///var/run/docker.sock"
  container_name_include = []
  docker_label_include = ["*"]
  gather_services = false